{"version":3,"sources":["utils/translators/flowdock.ts"],"names":[],"mappings":"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","file":"flowdock.js","sourcesContent":["/*\nCopyright 2016-2017 Resin.io\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as Promise from 'bluebird';\nimport { Session } from 'flowdock';\nimport { FlowdockConnectionDetails, FlowdockEmitContext, FlowdockEvent } from '../../services/flowdock-types';\nimport { MessageAction, MessageContext, TransmitContext } from '../../services/messenger-types';\nimport * as Translator from './translator';\n\nexport class FlowdockTranslator implements Translator.Translator {\n\tprivate session: Session;\n\tprivate organization: string;\n\n\tconstructor(data: FlowdockConnectionDetails) {\n\t\tthis.session = new Session(data.token);\n\t\tthis.organization = data.organization;\n\t}\n\n\t/**\n\t * Translate the provided event, enqueued by the service, into a message context\n\t * @param event  Data in the form raw to the service\n\t */\n\tpublic eventIntoCreateMessage(event: FlowdockEvent): Promise<MessageContext> {\n\t\t// Separate out some parts of the message\n\t\tconst metadata = Translator.extractMetadata(event.rawEvent.content);\n\t\tconst titleAndText = metadata.content.match(/^(.*)\\n--\\n((?:\\r|\\n|.)*)$/);\n\t\tconst flow = event.cookedEvent.flow;\n\t\tconst thread = event.rawEvent.thread_id;\n\t\tconst userId = event.rawEvent.user;\n\t\tconst org = this.organization;\n\t\tconst returnValue = {\n\t\t\taction: MessageAction.Create,\n\t\t\tfirst: event.rawEvent.id === event.rawEvent.thread.initial_message,\n\t\t\tgenesis: metadata.genesis || event.source,\n\t\t\thidden: metadata.hidden,\n\t\t\tsource: event.source,\n\t\t\tsourceIds: {\n\t\t\t\tmessage: event.rawEvent.id,\n\t\t\t\tflow,\n\t\t\t\tthread,\n\t\t\t\turl: `https://www.flowdock.com/app/${org}/${flow}/threads/${thread}`,\n\t\t\t\tuser: 'duff', // gets replaced\n\t\t\t},\n\t\t\ttext: titleAndText ? titleAndText[2] : metadata.content,\n\t\t\ttitle: titleAndText ? titleAndText[1] : undefined,\n\t\t};\n\t\t// If the data provided a username\n\t\tif (event.rawEvent.external_user_name) {\n\t\t\treturnValue.sourceIds.user = event.rawEvent.external_user_name;\n\t\t\treturn Promise.resolve(returnValue);\n\t\t}\n\t\treturn this.fetchFromSession(`/organizations/${org}/users/${userId}`)\n\t\t.then((user) => {\n\t\t\treturnValue.sourceIds.user = user.nick;\n\t\t\treturn(returnValue);\n\t\t});\n\t}\n\n\t/**\n\t * Translate the provided message context into an emit context\n\t * @param message  Standard form of the message\n\t */\n\tpublic messageIntoEmit(message: TransmitContext): Promise<FlowdockEmitContext> {\n\t\t// Build a string for the title, if appropriate.\n\t\tconst titleText = message.first && message.title ? message.title + '\\n--\\n' : '';\n\t\treturn new Promise<FlowdockEmitContext>((resolve) => {\n\t\t\t// TODO: Remember that this used to have a pass-through and probably recycle that idea in messenger.ts\n\t\t\tresolve({\n\t\t\t\tmethod: 'POST',\n\t\t\t\tpath: '/flows/${org}/${flow}/messages/',\n\t\t\t\tpayload: {\n\t\t\t\t\t// The concatenated string, of various data nuggets, to emit\n\t\t\t\t\tcontent: titleText + message.text + '\\n' + Translator.stringifyMetadata(message),\n\t\t\t\t\tevent: 'message',\n\t\t\t\t\t// TODO: Something with this?!?!\n\t\t\t\t\t// external_user_name:\n\t\t\t\t\t// If this is using the generic token, then they must be an external user, so indicate this\n\t\t\t\t\t// \tmessage.toIds.token === this.data.token ? message.toIds.user.substring(0, 16) : undefined,\n\t\t\t\t\tthread_id: message.toIds.thread,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Translate the provided generic name for an event into the service events to listen to\n\t * @param name  Generic name for an event\n\t */\n\tpublic eventNameIntoTriggers(name: string): string[] {\n\t\tconst equivalents: {[key: string]: string[]} = {\n\t\t\tmessage: ['message'],\n\t\t};\n\t\treturn equivalents[name];\n\t}\n\n\t/**\n\t * Utility function to structure the flowdock session as a promise.\n\t * @param path    Endpoint to retrieve.\n\t * @param search  Optional, some words which may be used to shortlist the results.\n\t * @returns       Response from the session.\n\t */\n\tprivate fetchFromSession = (path: string, search?: string): Promise<any> => {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\t// The flowdock service both emits and calls back the error.\n\t\t\t// We're wrapping the emit in a promise reject and ignoring the error in callback\n\t\t\tthis.session.on('error', reject);\n\t\t\tthis.session.get(path, {search}, (_error?: Error, result?: any) => {\n\t\t\t\tthis.session.removeListener('error', reject);\n\t\t\t\tif (result) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport function createTranslator(data: FlowdockConnectionDetails): Translator.Translator {\n\treturn new FlowdockTranslator(data);\n}\n"],"sourceRoot":"../../../lib"}
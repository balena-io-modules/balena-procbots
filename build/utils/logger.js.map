{"version":3,"sources":["utils/logger.ts"],"names":[],"mappings":";;AAmBA,4BAA4B;AAS5B,IAAY,QAOX;AAPD,WAAY,QAAQ;IAEnB,uCAAQ,CAAA;IAER,uCAAI,CAAA;IAEJ,yCAAK,CAAA;AACN,CAAC,EAPW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAOnB;AAAA,CAAC;AASF,IAAY,UAKX;AALD,WAAY,UAAU;IAErB,mDAAY,CAAA;IAEZ,6CAAK,CAAA;AACN,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAAA,CAAC;AAMF;IAAA;QAGS,cAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;QACvE,gBAAW,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC;QAG9E,oBAAe,GAAG;YACzB,SAAS;YACT,MAAM;YACN,OAAO;SACP,CAAC;QAGM,sBAAiB,GAAG;YAC3B,UAAU;YACV,OAAO;SACP,CAAC;IAiEH,CAAC;IA3DA,IAAW,QAAQ;QAClB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAMD,IAAW,QAAQ,CAAC,KAAe;QAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAMD,IAAW,UAAU;QACpB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAMD,IAAW,UAAU,CAAC,KAAiB;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1B,CAAC;IAQM,GAAG,CAAC,KAAa,EAAE,OAAe,EAAE,OAAkB;QAC5D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC3C,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACb,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;QACtE,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAOM,KAAK,CAAC,KAAa,EAAE,OAAe;QAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;IAGO,MAAM,CAAC,KAAa,EAAE,UAAkB,EAAE,YAAsB,EAAE,OAAe;QACxF,EAAE,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,CAAC,CAAC;QACjF,CAAC;IACF,CAAC;CACD;AAlFD,wBAkFC","file":"logger.js","sourcesContent":["/*\nCopyright 2016-2017 Resin.io\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// This is class and not a module as it allows different clients to change their\n// log level without affecting the rest of the system.\n\nimport * as _ from 'lodash';\n\n/**\n * Logging levels are stacked, with a chosen logging level also triggering all\n * levels below it; choosing a logging level of DEBUG will cause all DEBUG,\n * INFO & WARN levels to be output, choosing a logging level of WARN will only cause\n * WARN levels to be output.\n * They are arranged this way to allow additional items to be added if required.\n */\nexport enum LogLevel {\n\t/** Warning level. */\n\tWARN = 0,\n\t/** Information level. Includes WARN level. */\n\tINFO,\n\t/** Debug level. Includes INFO and WARN level. */\n\tDEBUG\n};\n\n/**\n * Alerting levels are stacked, with a chosen alerting level also triggering all\n * levels below it; choosing an alerting level of ERROR will cause both\n * ERROR & CRITICAL output to be sent to the alert system; choosing CRITICAL will only\n * output CRITICAL errors to the alert system.\n * They are arranged this way to allow additional items to be added if required.\n */\nexport enum AlertLevel {\n\t/** Critical alert level. */\n\tCRITICAL = 0,\n\t/** Error level. Includes CRITICAL level. */\n\tERROR\n};\n\n/**\n * The Logger class allows output from the bots and services to any useful medium.\n * Currently the only output is of that to the console.\n */\nexport class Logger {\n\t// Log and Alert levels are taken from an envvar or set to the minimum.\n\t// These can be overriden by specific methods.\n\tprivate _logLevel = _.parseInt(process.env.PROCBOT_LOG_LEVEL) || LogLevel.INFO;\n\tprivate _alertLevel = _.parseInt(process.env.PROCBOT_ALERT_LEVEL) || AlertLevel.ERROR;\n\n\t/** Strings prepended to logging output. */\n\tprivate logLevelStrings = [\n\t\t'WARNING',\n\t\t'INFO',\n\t\t'DEBUG'\n\t];\n\n\t/** Strings prepended to alerting output. */\n\tprivate alertLevelStrings = [\n\t\t'CRITICAL',\n\t\t'ERROR'\n\t];\n\n\t/**\n\t * Get the logging level.\n\t * @return  Current logging level.\n\t */\n\tpublic get logLevel(): LogLevel {\n\t\treturn this._logLevel;\n\t}\n\n\t/**\n\t * Set logging evel.\n\t * @param level  Logging level to use.\n\t */\n\tpublic set logLevel(level: LogLevel) {\n\t\tthis._logLevel = level;\n\t}\n\n\t/**\n\t * Get the alert level.\n\t * @return  Current alerting level.\n\t */\n\tpublic get alertLevel(): AlertLevel {\n\t\treturn this._alertLevel;\n\t}\n\n\t/**\n\t * Set alert level.\n\t * @param level  Alerting level to use.\n\t */\n\tpublic set alertLevel(level: AlertLevel) {\n\t\tthis._alertLevel = level;\n\t}\n\n\t/**\n\t * Log output.\n\t * @param level    The level that this message is of (INFO, etc.).\n\t * @param message  The actual log message.\n\t * @param secrets  An optional array of strings to redact\n\t */\n\tpublic log(level: number, message: string, secrets?: string[]): void {\n\t\tif (secrets) {\n\t\t\tconst redactFilter = secrets.map((secret) => {\n\t\t\t\treturn _.escapeRegExp(secret);\n\t\t\t}).join('|');\n\t\t\tmessage = message.replace(new RegExp(redactFilter, 'g'), 'redacted');\n\t\t}\n\t\tthis.output(level, this._logLevel, this.logLevelStrings, message);\n\t}\n\n\t/**\n\t * Alert output.\n\t * @param level    The level that this message is of (ERROR, etc.).\n\t * @param message  The actual alert message.\n\t */\n\tpublic alert(level: number, message: string): void {\n\t\tthis.output(level, this._alertLevel, this.alertLevelStrings, message);\n\t}\n\n\t// Generic output method for either type.\n\tprivate output(level: number, classLevel: number, levelStrings: string[], message: string): void {\n\t\tif (level <= classLevel) {\n\t\t\tconsole.log(`${new Date().toISOString()}: ${levelStrings[level]} - ${message}`);\n\t\t}\n\t}\n}\n"],"sourceRoot":"../../lib"}
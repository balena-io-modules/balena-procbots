{"version":3,"sources":["RASP/services/service.ts"],"names":[],"mappings":"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","file":"service.js","sourcesContent":["import * as _ from 'lodash';\nimport { AddEmitterContext, AddListenerContext, SetServiceAsContext, ServiceNameContext } from '../Antlr/RASPParser';\nimport { BotDetails, ClassType, ServiceDefinition, ServiceType } from '../parser-types';\nimport { DebugExpression } from '../helpers';\nimport { ExtRASPListener } from '../parser';\n\nexport class ServiceGenerator {\n\tpublic static enterAddService(ctx: AddListenerContext | AddEmitterContext, bot: BotDetails): void {\n\t\tconst type = (ctx instanceof AddListenerContext) ? ServiceType.Listener : ServiceType.Emitter;\n\t\tconst defaultName = (type === ServiceType.Listener) ? 'defaultServiceListener' : 'defaultServiceEmitter';\n\t\t// New ServiceDefinition\n\t\tif (bot.currentService) {\n\t\t\tthrow new Error('There is already a service definition being constructed, error');\n\t\t}\n\t\tlet assignedName = '';\n\t\tconst serviceAsContext = ctx.setServiceAs();\n\t\tif (serviceAsContext) {\n\t\t\tassignedName = serviceAsContext.ID().text;\n\t\t}\n\t\tbot.currentService = {\n\t\t\ttype,\n\t\t\tname: assignedName ? assignedName : defaultName\n\t\t};\n\t}\n\n\tpublic static exitAddService(_ctx: AddListenerContext | AddEmitterContext, bot: BotDetails): void {\n\t\t// Verify we have enough information, if required, then push this service listener onto\n\t\t// the list of listeners and create a new variable name.\n\t\tif (!bot.currentService) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst type = bot.currentService.type;\n\t\tlet list: ServiceDefinition[] | undefined;\n\t\tif (!bot.classVariables) {\n\t\t\tbot.classVariables = [];\n\t\t}\n\n\t\t// Add the service to the right list.\n\t\tif (type === ServiceType.Listener) {\n\t\t\tif (!bot.listeners) {\n\t\t\t\tbot.listeners = [];\n\t\t\t}\n\t\t\tlist = bot.listeners;\n\t\t} else if (type === ServiceType.Emitter) {\n\t\t\tif (!bot.emitters) {\n\t\t\t\tbot.emitters = [];\n\t\t\t}\n\t\t\tlist = bot.emitters;\n\t\t}\n\t\tif (!list) {\n\t\t\tthrow new Error('Incorrect service type!');\n\t\t}\n\n\t\t// Push service on.\n\t\tlist.push(bot.currentService);\n\n\t\t// Ensure we have a new class variable with the right name.\n\t\tbot.classVariables.push({\n\t\t\tname: bot.currentService.name,\n\t\t\ttype: ClassType.ServiceListener\n\t\t});\n\n\t\t// We may well have an object for initialisation. This is the currentExpression.\n\t\tif (bot.currentExpression) {\n\t\t\t//DebugExpression(bot.currentExpression);\n\t\t\tbot.currentService.constructDetails = bot.currentExpression;\n\t\t\tbot.currentExpression = undefined;\n\t\t}\n\n\t\t// Reset the current service.\n\t\tbot.currentService = undefined;\n\t}\n\n\tpublic static enterServiceName(ctx: ServiceNameContext, bot: BotDetails): void {\n\t\tconst name = ctx.text;\n\t\tif (!name) {\n\t\t\tthrow new Error('Correct service name was not found');\n\t\t}\n\t\tif (bot.currentService) {\n\t\t\tbot.currentService.serviceName = name;\n\t\t} else if (bot.currentEventRegistration) {\n\t\t\tbot.currentEventRegistration.serviceName = name;\n\t\t}\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterAddListener'] = _.partial(ServiceGenerator.enterAddService, _, definition);\n\tlistener['exitAddListener'] = _.partial(ServiceGenerator.exitAddService, _, definition);\n\tlistener['enterAddEmitter'] = _.partial(ServiceGenerator.enterAddService, _, definition);\n\tlistener['exitAddEmitter'] = _.partial(ServiceGenerator.exitAddService, _, definition);\n\tlistener['enterServiceName'] = _.partial(ServiceGenerator.enterServiceName, _, definition);\n}\n"],"sourceRoot":"../../../lib"}
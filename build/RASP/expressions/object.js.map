{"version":3,"sources":["RASP/expressions/object.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAK5B;IAAA;QACQ,SAAI,KAA4C;QAChD,eAAU,GAAiB,EAAE,CAAC;IA6BtC,CAAC;IA1BO,MAAM,CAAC,WAAW,CAAC,GAAkB,EAAE,YAAwB;QAGrE,MAAM,UAAU,GAAG,IAAI,yBAAyB,EAAE,CAAC;QACnD,UAAU,CAAC,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC;QACnD,YAAY,CAAC,iBAAiB,GAAG,UAAU,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,GAAkB,EAAE,YAAwB;QACpE,EAAE,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpC,MAAM,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAKrD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnD,YAAY,CAAC,iBAAiB,GAAG,MAAM,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;IAEM,WAAW,CAAC,IAAgB;QAElC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;CACD;AA/BD,8DA+BC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IACnF,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAC1F,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,UAAU,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACzF,CAAC;AAHD,gDAGC","file":"object.js","sourcesContent":["import * as _ from 'lodash';\nimport { ObjectContext } from '../Antlr/RASPParser';\nimport { BotDetails, Expression, ExpressionOp, ObjectExpression } from '../parser-types';\nimport { ExtRASPListener } from '../parser';\n\nexport class ObjectExpressionGenerator implements ObjectExpression {\n\tpublic type: ExpressionOp.Object = ExpressionOp.Object;\n\tpublic properties: Expression[] = [];\n\tpublic parent: Expression | undefined;\n\n\tpublic static enterObject(ctx: ObjectContext, botStructure: BotDetails): void {\n\t\t// Create a new Object Expression, set its parent, and then ensure the current\n\t\t// parsed expression is this.\n\t\tconst objectExpr = new ObjectExpressionGenerator();\n\t\tobjectExpr.parent = botStructure.currentExpression;\n\t\tbotStructure.currentExpression = objectExpr;\n\t}\n\n\tpublic static exitObject(ctx: ObjectContext, botStructure: BotDetails): void {\n\t\tif (botStructure.currentExpression) {\n\t\t\tconst parent = botStructure.currentExpression.parent;\n\t\t\t// Assign current parent to expression.\n\t\t\t// If there is no expression, we leave it, as it will be handled\n\t\t\t// by the statement or service above which will know how to\n\t\t\t// add and remove it.\n\t\t\tif (parent) {\n\t\t\t\tparent.assignChild(botStructure.currentExpression);\n\t\t\t\tbotStructure.currentExpression = parent;\n\t\t\t}\n\t\t}\n\t}\t\n\n\tpublic assignChild(expr: Expression): void {\n\t\t// Called from the child.\n\t\tthis.properties.push(expr);\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterObject'] = _.partial(ObjectExpressionGenerator.enterObject, _, definition);\n\tlistener['exitObject'] = _.partial(ObjectExpressionGenerator.exitObject, _, definition);\n}"],"sourceRoot":"../../../lib"}
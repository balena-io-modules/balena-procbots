{"version":3,"sources":["RASP/expressions/object.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAK5B;IAAA;QACW,SAAI,KAA4C;QAChD,eAAU,GAAiB,EAAE,CAAC;IA6BzC,CAAC;IA1BU,MAAM,CAAC,WAAW,CAAC,GAAkB,EAAE,YAAwB;QAGlE,MAAM,UAAU,GAAG,IAAI,yBAAyB,EAAE,CAAC;QACnD,UAAU,CAAC,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC;QACnD,YAAY,CAAC,iBAAiB,GAAG,UAAU,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,GAAkB,EAAE,YAAwB;QACjE,EAAE,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACjC,MAAM,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAKrD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnD,YAAY,CAAC,iBAAiB,GAAG,MAAM,CAAC;YAC5C,CAAC;QACL,CAAC;IACL,CAAC;IAEM,WAAW,CAAC,IAAgB;QAE/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CACJ;AA/BD,8DA+BC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IAChF,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAC1F,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,UAAU,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC5F,CAAC;AAHD,gDAGC","file":"object.js","sourcesContent":["import * as _ from 'lodash';\nimport { ObjectContext } from '../Antlr/RASPParser';\nimport { BotDetails, Expression, ExpressionOp, ObjectExpression } from '../parser-types';\nimport { ExtRASPListener } from '../parser';\n\nexport class ObjectExpressionGenerator implements ObjectExpression {\n    public type: ExpressionOp.Object = ExpressionOp.Object;\n    public properties: Expression[] = [];\n    public parent: Expression | undefined;\n\n    public static enterObject(ctx: ObjectContext, botStructure: BotDetails): void {\n        // Create a new Object Expression, set its parent, and then ensure the current\n        // parsed expression is this.\n        const objectExpr = new ObjectExpressionGenerator();\n        objectExpr.parent = botStructure.currentExpression;\n        botStructure.currentExpression = objectExpr;\n    }\n\n    public static exitObject(ctx: ObjectContext, botStructure: BotDetails): void {\n        if (botStructure.currentExpression) {\n            const parent = botStructure.currentExpression.parent;\n            // Assign current parent to expression.\n            // If there is no expression, we leave it, as it will be handled\n            // by the statement or service above which will know how to\n            // add and remove it.\n            if (parent) {\n                parent.assignChild(botStructure.currentExpression);\n                botStructure.currentExpression = parent;\n            }\n        }\n    }    \n\n    public assignChild(expr: Expression): void {\n        // Called from the child.\n        this.properties.push(expr);\n    }\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n    listener['enterObject'] = _.partial(ObjectExpressionGenerator.enterObject, _, definition);\n    listener['exitObject'] = _.partial(ObjectExpressionGenerator.exitObject, _, definition);\n}"],"sourceRoot":"../../../lib"}
{"version":3,"sources":["RASP/expressions/variable.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAK5B;IAAA;QACQ,SAAI,KAAgD;IAyC5D,CAAC;IApCO,MAAM,CAAC,aAAa,CAAC,GAAoB,EAAE,YAAwB;QAGzE,MAAM,YAAY,GAAG,IAAI,2BAA2B,EAAE,CAAC;QACvD,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC;QAKrD,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChB,YAAY,CAAC,IAAI,IAAI,GAAG,CAAC;YAC1B,CAAC;YACD,SAAS,GAAG,KAAK,CAAC;YAClB,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QAChC,CAAC;QAED,YAAY,CAAC,iBAAiB,GAAG,YAAY,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,GAAoB,EAAE,YAAwB;QACxE,EAAE,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpC,MAAM,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnD,YAAY,CAAC,iBAAiB,GAAG,MAAM,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;IAEM,WAAW,CAAC,IAAgB;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;CACD;AA1CD,kEA0CC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IACnF,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,aAAa,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAChG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,YAAY,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC/F,CAAC;AAHD,gDAGC","file":"variable.js","sourcesContent":["import * as _ from 'lodash';\nimport { VariableContext } from '../Antlr/RASPParser';\nimport { BotDetails, Expression, ExpressionOp, VariableExpression } from '../parser-types';\nimport { ExtRASPListener } from '../parser';\n\nexport class VariableExpressionGenerator implements VariableExpression {\n\tpublic type: ExpressionOp.Variable = ExpressionOp.Variable;\n\tpublic name: string;\n\tpublic value: Expression;\n\tpublic parent: Expression | undefined;\n\n\tpublic static enterVariable(ctx: VariableContext, botStructure: BotDetails): void {\n\t\t// Create a new Object Expression, set its parent, and then ensure the current\n\t\t// parsed expression is this.\n\t\tconst variableExpr = new VariableExpressionGenerator();\n\t\tvariableExpr.parent = botStructure.currentExpression;\n\n\t\t// Get the full variable name.\n\t\t// If this were an object, we'd check that it were in context here.\n\t\t// TBD.\n\t\tvariableExpr.name = '';\n\t\tlet firstPart = true;\n\t\tfor (let part of ctx.ID()) {\n\t\t\tif (!firstPart) {\n\t\t\t\tvariableExpr.name += '.';\n\t\t\t}\n\t\t\tfirstPart = false;\n\t\t\tvariableExpr.name += part.text;\n\t\t}\n\n\t\tbotStructure.currentExpression = variableExpr;\n\t}\n\n\tpublic static exitVariable(ctx: VariableContext, botStructure: BotDetails): void {\n\t\tif (botStructure.currentExpression) {\n\t\t\tconst parent = botStructure.currentExpression.parent;\n\t\t\t// Assign to parent, or leave it as we're at the top of the stack.\n\t\t\tif (parent) {\n\t\t\t\tparent.assignChild(botStructure.currentExpression);\n\t\t\t\tbotStructure.currentExpression = parent;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic assignChild(expr: Expression): void {\n\t\tthis.value = expr;\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterVariable'] = _.partial(VariableExpressionGenerator.enterVariable, _, definition);\n\tlistener['exitVariable'] = _.partial(VariableExpressionGenerator.exitVariable, _, definition);\n}"],"sourceRoot":"../../../lib"}
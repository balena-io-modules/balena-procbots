{"version":3,"sources":["RASP/expressions/array.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAK5B;IAAA;QACQ,SAAI,KAA0C;QAE9C,WAAM,GAAiB,EAAE,CAAC;IAgClC,CAAC;IA7BO,MAAM,CAAC,UAAU,CAAC,GAAiB,EAAE,YAAwB;QAGnE,MAAM,SAAS,GAAG,IAAI,wBAAwB,EAAE,CAAC;QACjD,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC;QAGlD,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACf,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACjC,CAAC;QAED,YAAY,CAAC,iBAAiB,GAAG,SAAS,CAAC;IAC5C,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,GAAiB,EAAE,YAAwB;QAClE,EAAE,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpC,MAAM,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnD,YAAY,CAAC,iBAAiB,GAAG,MAAM,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;IAEM,WAAW,CAAC,IAAgB;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACD;AAnCD,4DAmCC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IACnF,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,UAAU,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACvF,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACtF,CAAC;AAHD,gDAGC","file":"array.js","sourcesContent":["import * as _ from 'lodash';\nimport { ArrayContext } from '../Antlr/RASPParser';\nimport { BotDetails, Expression, ExpressionOp, ArrayExpression } from '../parser-types';\nimport { ExtRASPListener } from '../parser';\n\nexport class ArrayExpressionGenerator implements ArrayExpression {\n\tpublic type: ExpressionOp.Array = ExpressionOp.Array;\n\tpublic name: string;\n\tpublic values: Expression[] = [];\n\tpublic parent: Expression | undefined;\n\n\tpublic static enterArray(ctx: ArrayContext, botStructure: BotDetails): void {\n\t\t// Create a new Array Expression, set its parent, and then ensure the current\n\t\t// parsed expression is this.\n\t\tconst arrayExpr = new ArrayExpressionGenerator();\n\t\tarrayExpr.parent = botStructure.currentExpression;\n\n\t\t// Get the Array name if there is one.\n\t\tconst arrayName = ctx.ID();\n\t\tif (arrayName) {\n\t\t\tarrayExpr.name = arrayName.text;\n\t\t}\n\n\t\tbotStructure.currentExpression = arrayExpr;\n\t}\n\n\tpublic static exitArray(ctx: ArrayContext, botStructure: BotDetails): void {\n\t\tif (botStructure.currentExpression) {\n\t\t\tconst parent = botStructure.currentExpression.parent;\n\t\t\t// Either assign current to parent.\n\t\t\tif (parent) {\n\t\t\t\tparent.assignChild(botStructure.currentExpression);\n\t\t\t\tbotStructure.currentExpression = parent;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic assignChild(expr: Expression): void {\n\t\tthis.values.push(expr);\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterArray'] = _.partial(ArrayExpressionGenerator.enterArray, _, definition);\n\tlistener['exitArray'] = _.partial(ArrayExpressionGenerator.exitArray, _, definition);\n}"],"sourceRoot":"../../../lib"}
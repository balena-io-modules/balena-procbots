{"version":3,"sources":["RASP/expressions/arithmetic.ts"],"names":[],"mappings":";;AAKA;IAMW,WAAW,CAAC,IAAgB;QAE/B,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;IACL,CAAC;CACJ;AAhBD,sEAgBC","file":"arithmetic.js","sourcesContent":["import * as _ from 'lodash';\nimport { ExprContext } from '../Antlr/RASPParser';\nimport { ArithmeticExpression, BotDetails, Expression, ExpressionOp } from '../parser-types';\nimport { ExtRASPListener } from '../parser';\n\nexport class ArithmeticExpressionGenerator implements ArithmeticExpression {\n    public type: ExpressionOp.Add | ExpressionOp.Subtract | ExpressionOp.Multiply | ExpressionOp.Divide;\n    public parent: Expression | undefined;\n    public operandOne: Expression;\n    public operandTwo: Expression;\n\n    public assignChild(expr: Expression): void {\n        // Shove it onto one of the operands.\n        console.log('this is an operand expression');\n        console.log(expr);\n        if (!this.operandOne) {\n            this.operandOne = expr;\n        } else {\n            this.operandTwo = expr;\n        }\n    }\n}\n"],"sourceRoot":"../../../lib"}
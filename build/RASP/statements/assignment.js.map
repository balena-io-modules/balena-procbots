{"version":3,"sources":["RASP/statements/assignment.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAI5B,wCAA6C;AAG7C;IAAA;QACQ,SAAI,KAA0C;IA8CtD,CAAC;IA1CO,MAAM,CAAC,eAAe,CAAC,GAAsB,EAAE,GAAe;QAEpE,EAAE,CAAC,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;QACnF,CAAC;QACD,GAAG,CAAC,gBAAgB,GAAG;YACtB,IAAI,GAAoB;SACxB,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,cAAc,CAAC,IAAuB,EAAE,GAAe;QAEpE,IAAI,iBAA8B,CAAC;QAGnC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnD,MAAM,QAAQ,GAAuB,GAAG,CAAC,iBAAiB,CAAC;YAC3D,MAAM,UAAU,GAAwB,GAAG,CAAC,gBAAgB,CAAC;YAC7D,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAChC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAClC,yBAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAE/B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3C,GAAG,CAAC,qBAAqB,CAAC,UAAU,GAAG,EAAE,CAAC;YAC3C,CAAC;YACD,iBAAiB,GAAG,GAAG,CAAC,qBAAqB,CAAC,UAAU,CAAC;QAC1D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,CAAC;YACD,iBAAiB,GAAG,GAAG,CAAC,WAAW,CAAC;QACrC,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9C,CAAC;QACD,GAAG,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACjC,GAAG,CAAC,iBAAiB,GAAG,SAAS,CAAC;IACnC,CAAC;CACD;AA/CD,oEA+CC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IACnF,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,eAAe,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACrG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,cAAc,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACpG,CAAC;AAHD,gDAGC","file":"assignment.js","sourcesContent":["import * as _ from 'lodash';\nimport { AssignmentContext } from '../Antlr/RASPParser';\nimport { AssignmentStatement, BotDetails, Expression, Statement, StatementOp,\n\tVariableExpression  } from '../parser-types';\nimport { DebugExpression } from '../helpers';\nimport { ExtRASPListener } from '../parser';\n\nexport class AssignmentStatementGenerator implements AssignmentStatement {\n\tpublic type: StatementOp.Assign = StatementOp.Assign;\n\tpublic name: string;\n\tpublic value: Expression;\n\t\n\tpublic static enterAssignment(ctx: AssignmentContext, bot: BotDetails): void {\n\t\t// New Assignment\n\t\tif (bot.currentEventRegistration) {\n\t\t\tthrow new Error('There is already a event registration being constructed, error');\n\t\t}\n\t\tbot.currentStatement = {\n\t\t\ttype: StatementOp.Assign\n\t\t};\n\t}\n\n\tpublic static exitAssignment(_ctx: AssignmentContext, bot: BotDetails): void {\n\t\t// We have to test if this is a listener method or in the global context.\n\t\tlet assignmentContext: Statement[];\n\n\t\t// Ensure we have the name from the current expression and the values.\n\t\tconsole.log(bot.currentExpression);\n\t\tif (bot.currentStatement && bot.currentExpression) {\n\t\t\tconst variable = <VariableExpression>bot.currentExpression;\n\t\t\tconst assignment = <AssignmentStatement>bot.currentStatement;\n\t\t\tassignment.name = variable.name;\n\t\t\tassignment.value = variable.value;\n\t\t\tDebugExpression(bot.currentExpression);\n\t\t}\n\t\tif (bot.currentListenerMethod) {\n\t\t\t// We'd set context to the listener method.\n\t\t\tif (!bot.currentListenerMethod.statements) {\n\t\t\t\tbot.currentListenerMethod.statements = [];\n\t\t\t}\n\t\t\tassignmentContext = bot.currentListenerMethod.statements;\n\t\t} else {\n\t\t\tif (!bot.assignments) {\n\t\t\t\tbot.assignments = [];\n\t\t\t}\n\t\t\tassignmentContext = bot.assignments;\n\t\t}\n\t\t// Do assignment here\n\t\tif (bot.currentStatement) {\n\t\t\tassignmentContext.push(bot.currentStatement);\n\t\t}\n\t\tbot.currentStatement = undefined;\n\t\tbot.currentExpression = undefined;\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterAssignment'] = _.partial(AssignmentStatementGenerator.enterAssignment, _, definition);\n\tlistener['exitAssignment'] = _.partial(AssignmentStatementGenerator.exitAssignment, _, definition);\n}"],"sourceRoot":"../../../lib"}
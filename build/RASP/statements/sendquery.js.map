{"version":3,"sources":["RASP/statements/sendquery.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAO5B;IAAA;QACQ,SAAI,KAAwC;IAiDpD,CAAC;IA5CO,MAAM,CAAC,cAAc,CAAC,GAAqB,EAAE,GAAe;QAElE,GAAG,CAAC,gBAAgB,GAAG;YACtB,IAAI,GAAmB;YACvB,MAAM,EAAE,GAAG,CAAC,gBAAgB;SAC5B,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,aAAa,CAAC,GAAqB,EAAE,GAAe;QAEjE,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,aAAa,CAAC;QAClB,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC3B,aAAa,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;QAClC,CAAC;QAGD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB,IAAI,GAAG,CAAC,iBAAiB,IAAI,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAChF,MAAM,SAAS,GAAuB,GAAG,CAAC,gBAAgB,CAAC;YAC3D,SAAS,CAAC,YAAY,GAAG,aAAa,CAAC;YACvC,SAAS,CAAC,KAAK,GAAqB,GAAG,CAAC,iBAAiB,CAAC;YAE1D,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAC3C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACzC,GAAG,CAAC,gBAAgB,GAAG,MAAM,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC3C,GAAG,CAAC,qBAAqB,CAAC,UAAU,GAAG,EAAE,CAAC;gBAC3C,CAAC;gBAGD,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAClC,GAAG,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACtD,CAAC;gBACD,GAAG,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,CAAC;QAEF,CAAC;QACD,GAAG,CAAC,iBAAiB,GAAG,SAAS,CAAC;IACnC,CAAC;CACD;AAlDD,kEAkDC;AAED,4BAAmC,QAAyB,EAAE,UAAsB;IACnF,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,cAAc,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAClG,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,aAAa,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACjG,CAAC;AAHD,gDAGC","file":"sendquery.js","sourcesContent":["import * as _ from 'lodash';\nimport { SendQueryContext } from '../Antlr/RASPParser';\nimport { BotDetails, Expression, ObjectExpression, SendQueryStatement, Statement,\n\tStatementOp } from '../parser-types';\nimport { DebugExpression } from '../helpers';\nimport { ExtRASPListener } from '../parser';\n\nexport class SendQueryStatementGenerator implements SendQueryStatement {\n\tpublic type: StatementOp.Query = StatementOp.Query;\n\tpublic parent: Statement;\n\tpublic variableName: undefined;\n\tpublic value: ObjectExpression;\n\t\n\tpublic static enterSendQuery(ctx: SendQueryContext, bot: BotDetails): void {\n\t\t// New SendQuery\n\t\tbot.currentStatement = {\n\t\t\ttype: StatementOp.Query,\n\t\t\tparent: bot.currentStatement\n\t\t};\n\t}\n\n\tpublic static exitSendQuery(ctx: SendQueryContext, bot: BotDetails): void {\n\t\t// Are we assigning a variable to it?\n\t\tconst idFrom = ctx.setIdFrom();\n\t\tlet queryVariable;\n\t\tif (idFrom && idFrom.ID()) {\n\t\t\tqueryVariable = idFrom.ID().text;\n\t\t}\n\n\t\t// Ensure we have the name from the current expression and the values.\n\t\tconsole.log(bot.currentStatement);\n\t\tconsole.log(bot.currentExpression);\n\t\tif (bot.currentStatement && bot.currentExpression && bot.currentListenerMethod) {\n\t\t\tconst sendQuery = <SendQueryStatement>bot.currentStatement;\n\t\t\tsendQuery.variableName = queryVariable;\n\t\t\tsendQuery.value = <ObjectExpression>bot.currentExpression;\n\n\t\t\tconst parent = bot.currentStatement.parent;\n\t\t\tif (parent && parent.assignChild) {\n\t\t\t\tparent.assignChild(bot.currentStatement);\n\t\t\t\tbot.currentStatement = parent;\n\t\t\t} else {\n\t\t\t\tif (!bot.currentListenerMethod.statements) {\n\t\t\t\t\tbot.currentListenerMethod.statements = [];\n\t\t\t\t}\n\n\t\t\t\t// Add to the statements.\n\t\t\t\tif (bot.currentStatement) {\n\t\t\t\t\tconsole.log(bot.currentStatement);\n\t\t\t\t\tbot.currentListenerMethod.statements.push(sendQuery);\n\t\t\t\t}\n\t\t\t\tbot.currentStatement = undefined;\t\t\n\t\t\t}\n\t\t\t//DebugExpression(bot.currentStatement);\n\t\t}\n\t\tbot.currentExpression = undefined;\n\t}\n}\n\nexport function addListenerMethods(listener: ExtRASPListener, definition: BotDetails): void {\n\tlistener['enterSendQuery'] = _.partial(SendQueryStatementGenerator.enterSendQuery, _, definition);\n\tlistener['exitSendQuery'] = _.partial(SendQueryStatementGenerator.exitSendQuery, _, definition);\n}"],"sourceRoot":"../../../lib"}
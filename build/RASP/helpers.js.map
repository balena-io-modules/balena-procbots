{"version":3,"sources":["RASP/helpers.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAE5B,8BAAqC,OAAe,EAAE,KAAa,EAAE,QAAa,EAAE,WAAgB;IAChG,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/B,QAAQ,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC;IACzC,CAAC;AACL,CAAC;AAJD,oDAIC;AAED,wCAA+C,GAAG,UAAiB;IAE/D,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;QACrD,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC;AACL,CAAC;AAPD,wEAOC","file":"helpers.js","sourcesContent":["import * as _ from 'lodash';\n\nexport function MatchAssignByKeyword(keyword: string, value: string, assignTo: any, assignValue: any) {\n    if (_.startsWith(value, keyword)) {\n        assignTo[keyword] = assignValue.text;\n    }\n}\n\nexport function GetSingletonFromRulePotentials(...potentials: any[]) {\n    // This assumes that there can only be one match in the potentials.\n    for (let index = 0; index < potentials.length; index++) {\n        if (potentials[index]) {\n            return potentials[index];\n        }\n    }\n}\n"],"sourceRoot":"../../lib"}
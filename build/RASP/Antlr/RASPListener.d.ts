import { ParseTreeListener } from 'antlr4ts/tree/ParseTreeListener';
import { InitContext } from './RASPParser';
import { BotDefinitionContext } from './RASPParser';
import { BotBodyContext } from './RASPParser';
import { AddListenerContext } from './RASPParser';
import { AddEmitterContext } from './RASPParser';
import { RequestServiceEventsContext } from './RASPParser';
import { EventsContext } from './RASPParser';
import { SetIdAsContext } from './RASPParser';
import { SetIdFromContext } from './RASPParser';
import { ListenerMethodContext } from './RASPParser';
import { ListenerEventReceiverContext } from './RASPParser';
import { ListenerErrorContext } from './RASPParser';
import { StatementContext } from './RASPParser';
import { ExprContext } from './RASPParser';
import { ServiceNameContext } from './RASPParser';
import { VariableContext } from './RASPParser';
import { ObjectContext } from './RASPParser';
import { ArrayContext } from './RASPParser';
import { PropertyContext } from './RASPParser';
import { AssignmentContext } from './RASPParser';
import { R_ifContext } from './RASPParser';
import { R_whileContext } from './RASPParser';
import { LoopContext } from './RASPParser';
import { PrintContext } from './RASPParser';
import { EndContext } from './RASPParser';
import { SendQueryContext } from './RASPParser';
import { MethodContext } from './RASPParser';
import { MethodListContext } from './RASPParser';
import { StringMethodContext } from './RASPParser';
import { EnvvarContext } from './RASPParser';
export interface RASPListener extends ParseTreeListener {
    enterInit?: (ctx: InitContext) => void;
    exitInit?: (ctx: InitContext) => void;
    enterBotDefinition?: (ctx: BotDefinitionContext) => void;
    exitBotDefinition?: (ctx: BotDefinitionContext) => void;
    enterBotBody?: (ctx: BotBodyContext) => void;
    exitBotBody?: (ctx: BotBodyContext) => void;
    enterAddListener?: (ctx: AddListenerContext) => void;
    exitAddListener?: (ctx: AddListenerContext) => void;
    enterAddEmitter?: (ctx: AddEmitterContext) => void;
    exitAddEmitter?: (ctx: AddEmitterContext) => void;
    enterRequestServiceEvents?: (ctx: RequestServiceEventsContext) => void;
    exitRequestServiceEvents?: (ctx: RequestServiceEventsContext) => void;
    enterEvents?: (ctx: EventsContext) => void;
    exitEvents?: (ctx: EventsContext) => void;
    enterSetIdAs?: (ctx: SetIdAsContext) => void;
    exitSetIdAs?: (ctx: SetIdAsContext) => void;
    enterSetIdFrom?: (ctx: SetIdFromContext) => void;
    exitSetIdFrom?: (ctx: SetIdFromContext) => void;
    enterListenerMethod?: (ctx: ListenerMethodContext) => void;
    exitListenerMethod?: (ctx: ListenerMethodContext) => void;
    enterListenerEventReceiver?: (ctx: ListenerEventReceiverContext) => void;
    exitListenerEventReceiver?: (ctx: ListenerEventReceiverContext) => void;
    enterListenerError?: (ctx: ListenerErrorContext) => void;
    exitListenerError?: (ctx: ListenerErrorContext) => void;
    enterStatement?: (ctx: StatementContext) => void;
    exitStatement?: (ctx: StatementContext) => void;
    enterExpr?: (ctx: ExprContext) => void;
    exitExpr?: (ctx: ExprContext) => void;
    enterServiceName?: (ctx: ServiceNameContext) => void;
    exitServiceName?: (ctx: ServiceNameContext) => void;
    enterVariable?: (ctx: VariableContext) => void;
    exitVariable?: (ctx: VariableContext) => void;
    enterObject?: (ctx: ObjectContext) => void;
    exitObject?: (ctx: ObjectContext) => void;
    enterArray?: (ctx: ArrayContext) => void;
    exitArray?: (ctx: ArrayContext) => void;
    enterProperty?: (ctx: PropertyContext) => void;
    exitProperty?: (ctx: PropertyContext) => void;
    enterAssignment?: (ctx: AssignmentContext) => void;
    exitAssignment?: (ctx: AssignmentContext) => void;
    enterR_if?: (ctx: R_ifContext) => void;
    exitR_if?: (ctx: R_ifContext) => void;
    enterR_while?: (ctx: R_whileContext) => void;
    exitR_while?: (ctx: R_whileContext) => void;
    enterLoop?: (ctx: LoopContext) => void;
    exitLoop?: (ctx: LoopContext) => void;
    enterPrint?: (ctx: PrintContext) => void;
    exitPrint?: (ctx: PrintContext) => void;
    enterEnd?: (ctx: EndContext) => void;
    exitEnd?: (ctx: EndContext) => void;
    enterSendQuery?: (ctx: SendQueryContext) => void;
    exitSendQuery?: (ctx: SendQueryContext) => void;
    enterMethod?: (ctx: MethodContext) => void;
    exitMethod?: (ctx: MethodContext) => void;
    enterMethodList?: (ctx: MethodListContext) => void;
    exitMethodList?: (ctx: MethodListContext) => void;
    enterStringMethod?: (ctx: StringMethodContext) => void;
    exitStringMethod?: (ctx: StringMethodContext) => void;
    enterEnvvar?: (ctx: EnvvarContext) => void;
    exitEnvvar?: (ctx: EnvvarContext) => void;
}

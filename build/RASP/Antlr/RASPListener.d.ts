import { ParseTreeListener } from 'antlr4ts/tree/ParseTreeListener';
import { InitContext } from './RASPParser';
import { BotDefinitionContext } from './RASPParser';
import { BotBodyContext } from './RASPParser';
import { BotNameContext } from './RASPParser';
import { AddListenerContext } from './RASPParser';
import { ServiceNameContext } from './RASPParser';
import { ServiceConstructorContext } from './RASPParser';
import { GithubConstructorContext } from './RASPParser';
import { GithubConstructorTypeContext } from './RASPParser';
export interface RASPListener extends ParseTreeListener {
    enterInit?: (ctx: InitContext) => void;
    exitInit?: (ctx: InitContext) => void;
    enterBotDefinition?: (ctx: BotDefinitionContext) => void;
    exitBotDefinition?: (ctx: BotDefinitionContext) => void;
    enterBotBody?: (ctx: BotBodyContext) => void;
    exitBotBody?: (ctx: BotBodyContext) => void;
    enterBotName?: (ctx: BotNameContext) => void;
    exitBotName?: (ctx: BotNameContext) => void;
    enterAddListener?: (ctx: AddListenerContext) => void;
    exitAddListener?: (ctx: AddListenerContext) => void;
    enterServiceName?: (ctx: ServiceNameContext) => void;
    exitServiceName?: (ctx: ServiceNameContext) => void;
    enterServiceConstructor?: (ctx: ServiceConstructorContext) => void;
    exitServiceConstructor?: (ctx: ServiceConstructorContext) => void;
    enterGithubConstructor?: (ctx: GithubConstructorContext) => void;
    exitGithubConstructor?: (ctx: GithubConstructorContext) => void;
    enterGithubConstructorType?: (ctx: GithubConstructorTypeContext) => void;
    exitGithubConstructorType?: (ctx: GithubConstructorTypeContext) => void;
}

{"version":3,"sources":["app.ts"],"names":[],"mappings":";;AAiBA,mCAAmC;AACnC,oCAAqC;AAErC,2CAAkD;AAGlD,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC;IACvB,CAAE,GAAG,EAAE,gBAAgB,EAAI,gCAAgC,CAAC;IAC5D,CAAE,GAAG,EAAE,MAAM,EAAK,mBAAmB,CAAC;CACtC,CAAC,CAAC;AAGH,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;AAG5B,MAAM,CAAC,OAAO,CAAC;SACN,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;CAE5C,CAAC,CAAC;AAGH,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;IAClE,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC;AAGD,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,QAAQ,OAAO,CAAC,GAAG,CAAC,gBAAgB,aAAa,OAAO,CAAC,GAAG,CAAC,mBAAmB,OAAO,CAAC,CAAC;AAGnH,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,IAAS,EAAE,GAAQ;IACpC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IAChB,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,0CAA0C,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC;AAGH,IAAI,WAAW,GAAc,EAAE,CAAC;AAChC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAc,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAEpD,IAAI,CAAC;QACJ,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;QAC3C,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,iBAAiB,GAAG,KAAK,CAAC,CAAC;IACtD,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,kCAAkC,GAAG,EAAE,CAAC,CAAC;QACnE,MAAM,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,GAAG,CAAC;IACX,CAAC;AACF,CAAC","file":"app.js","sourcesContent":["/*\nCopyright 2016-2017 Resin.io\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// Import most things with types if possible.\nimport * as express from 'express';\nimport Opts = require('node-getopt');\nimport { ProcBot } from './framework/procbot';\nimport { Logger, LogLevel } from './utils/logger';\n\n// Arguments determine which bot type we want to use.\nconst getopt = new Opts([\n\t[ 'b',\t'bot-names=ARG+',   'Determines which bots will run'],\n\t[ 'h',\t'help',\t\t\t 'This help message'],\n]);\n\n// Create a new Logger.\nconst logger = new Logger();\n\n// Set options help.\ngetopt.setHelp(`\nUsage: ${process.argv[1].split('/').slice(-1)} [OPTION]\n[[OPTIONS]]\n`);\n\n// No options, no run.\nconst opt = getopt.parse(process.argv.slice(2));\nif (opt.options['help'] || Object.keys(opt.options).length === 0) {\n\tlogger.log(LogLevel.WARN, getopt.getHelp());\n\tprocess.exit(0);\n}\n\n// Startup text.\nlogger.log(LogLevel.INFO, `---> ${process.env.npm_package_name}, Version ${process.env.npm_package_version} <---`);\n\n// Create Ping server.\nconst app = express();\napp.get('/ping', (_req: any, res: any) => {\n\tres.send('OK');\n});\napp.listen(8080, () => {\n\tlogger.log(LogLevel.INFO, `---> Started 'ping' service on port 8080`);\n});\n\n// Import any specified bots. These will all listen for webhooks.\nlet botRegistry: ProcBot[] = [];\nfor (let bot of <string[]>opt.options['bot-names']) {\n\t// Dynamically require the bots.\n\ttry {\n\t\tlet importedBot = require(`./bots/${bot}`);\n\t\tbotRegistry.push(importedBot.createBot());\n\t\tlogger.log(LogLevel.INFO, `---> Imported ${bot}...`);\n\t} catch (err) {\n\t\tlogger.log(LogLevel.WARN, `---> Could not import bot type ${bot}`);\n\t\tlogger.log(LogLevel.WARN, err);\n\t\tthrow err;\n\t}\n}\n"],"sourceRoot":"../lib"}
{"version":3,"sources":["mixins/flowdock.ts"],"names":[],"mappings":";AAAA,2CAA2C;AAG3C;IACW,WAAW,CAAC,IAAuB;QAEtC,MAAM,WAAW,GAAG;YAChB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,gDAAgD,IAAI,CAAC,MAAM,EAAE;SACrE,CAAC;QAKF,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;YAExF,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;CACJ;AAjBD,0CAiBC","file":"flowdock.js","sourcesContent":["import * as request from 'request-promise';\nimport { FlowdockInboxItem } from './flowdock-types';\n\nexport class FlowdockAdapter {\n    public postToInbox(item: FlowdockInboxItem) {\n        //  Make a straight post to the inbox from the client.\n        const requestOpts = {\n            body: item,\n            json: true,\n            url: `https://api.flowdock.com/messages/team_inbox/${item.roomId}`,\n        };\n\n        // If we aren't outputting to Flowdock (development build, test build, etc)\n        // just return.\n        // People invariably use different cases, so...\n        if (process.env.FLOWDOCK_ALERTS && (process.env.FLOWDOCK_ALERTS.toLowerCase() === 'true')) {\n            // We don't wait for a response, we have no control over it anyway.\n            request.post(requestOpts);\n        }\n    }\n}\n"],"sourceRoot":"../../lib"}
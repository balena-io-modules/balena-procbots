{"version":3,"sources":["services/messenger/datahubs/datahub.ts"],"names":[],"mappings":";;AAmCA,uBAA8B,IAAY,EAAE,IAAS;IACpD,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AAFD,sCAEC","file":"datahub.js","sourcesContent":["/*\n Copyright 2016-2017 Resin.io\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport * as Promise from 'bluebird';\n\n/** A definition for a service that allows the retrieval of user-set values. */\nexport interface DataHub {\n\t/**\n\t * Retrieve a value that a user has set.\n\t * @param user   The user who's data set we wish to search, eg sqweelygig\n\t * @param service The service for which we seek a value, eg discourse\n\t * @param key     The data we wish to search for, eg token\n\t */\n\tfetchValue(user: string, service: string, key: string): Promise<string>;\n}\n\n/**\n * Retrieves and loads a DataHub by name.\n * @param name  The name of the DataHub to load.\n * @param data  The constructor object for the createDataHub method.\n * @return      The newly instantiated DataHub.\n */\nexport function createDataHub(name: string, data: any): DataHub {\n\treturn require(`./${name}`).createDataHub(data);\n}\n"],"sourceRoot":"../../../../lib"}
{"version":3,"sources":["services/messenger/datahubs/configuration.ts"],"names":[],"mappings":";;AAgBA,oCAAoC;AACpC,wDAA0D;AAI1D;IAGC,YAAY,MAAc;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAQM,UAAU,CAAC,IAAY,EAAE,OAAe,EAAE,GAAW;QAC3D,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,IAAI,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;QACxE,EAAE,CAAA,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,sBAAY,IAA8C,GAAG,MAAM,aAAa,CAAC,CAAC,CAAC;IAC9G,CAAC;CACD;AApBD,oDAoBC;AAED,uBAA8B,MAAc;IAC3C,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC;AAFD,sCAEC","file":"configuration.js","sourcesContent":["/*\n Copyright 2016-2017 Resin.io\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport * as Promise from 'bluebird';\nimport { ProcBotError } from '../../../framework/procbot';\nimport { ProcBotErrorCode } from '../../../framework/procbot-types';\nimport { DataHub } from './datahub';\n\nexport class ConfigurationDataHub implements DataHub {\n\tprivate prefix: string;\n\n\tconstructor(prefix: string) {\n\t\tthis.prefix = prefix;\n\t}\n\t/**\n\t * Search for the specified value associated with a user.\n\t * @param user    Username to search associated with.\n\t * @param service The service for which we seek a value, eg discourse\n\t * @param key     Name of the value to retrieve.\n\t * @returns       Promise that resolves to the value.\n\t */\n\tpublic fetchValue(user: string, service: string, key: string): Promise<string> {\n\t\tconst envVar = `${this.prefix}_${user}_${service}_${key}`.toUpperCase();\n\t\tif(process.env[envVar]) {\n\t\t\treturn Promise.resolve(process.env[envVar]);\n\t\t}\n\t\treturn Promise.reject(new ProcBotError(ProcBotErrorCode.ConfigurationValueNotFound, `${envVar} not found.`));\n\t}\n}\n\nexport function createDataHub(prefix: string): DataHub {\n\treturn new ConfigurationDataHub(prefix);\n}\n"],"sourceRoot":"../../../../lib"}
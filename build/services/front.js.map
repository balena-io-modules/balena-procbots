{"version":3,"sources":["services/front.ts"],"names":[],"mappings":";;AAiBA,yCAA+C;AAC/C,6BAA6B;AAO7B,2DAAuD;AAEvD,kBAA0B,SAAQ,oCAAgB;IAUvC,OAAO,CAAC,IAA4B;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAMS,QAAQ,CAAC,OAAyB;QAC3C,MAAM,gBAAgB,GAIlB;YACH,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;YAK7B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;YAC7B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SACzB,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC9E,CAAC;IAKS,cAAc;QAGvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,QAAQ;YAC3D,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ;YACzE,IAAI,CAAC,SAAS,CAAC;gBACd,WAAW,EAAE;oBACZ,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACtC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;iBACzB;gBACD,QAAQ,EAAE,QAAQ,CAAC,IAAI;gBACvB,MAAM,EAAE,YAAY,CAAC,YAAY;aACjC,CAAC,CAAC;YACH,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACJ,CAAC;IAKS,MAAM,CAAC,KAAiB;QAEjC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAMD,IAAI,WAAW;QACd,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC;IAClC,CAAC;IAMD,IAAI,SAAS;QACZ,MAAM,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,OAAO;SACnB,CAAC;IACH,CAAC;;AAjFc,yBAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AADvE,oCAmFC;AAMD,+BAAsC,IAA4B;IACjE,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC;AAFD,sDAEC;AAMD,8BAAqC,IAA4B;IAChE,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC;AAFD,oDAEC","file":"front.js","sourcesContent":["/*\n Copyright 2016-2017 Resin.io\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport * as Promise from 'bluebird';\nimport { Front, RequestData } from 'front-sdk';\nimport * as path from 'path';\n\nimport {\n\tFrontConnectionDetails, FrontEmitContext,\n\tFrontEvent, FrontHandle, FrontResponse,\n} from './front-types';\nimport { ServiceEmitter, ServiceListener } from './service-types';\nimport { ServiceUtilities } from './service-utilities';\n\nexport class FrontService extends ServiceUtilities implements ServiceListener, ServiceEmitter {\n\tprivate static _serviceName = path.basename(__filename.split('.')[0]);\n\n\t/** Underlying SDK object that we route requests to */\n\tprivate session: Front;\n\n\t/**\n\t * Connect to the service, used as part of construction.\n\t * @param data  Object containing the required details for the service.\n\t */\n\tprotected connect(data: FrontConnectionDetails) {\n\t\tthis.session = new Front(data.token);\n\t}\n\n\t/**\n\t * Return a method that will: emit RequestData to the service, resolving to ResponseData\n\t * @param context  Context to be emitted\n\t */\n\tprotected emitData(context: FrontEmitContext): Promise<FrontResponse> {\n\t\tconst sessionEndpoints: {\n\t\t\t[key: string]: {\n\t\t\t\t[key: string]: (payload: RequestData) => Promise<FrontResponse>;\n\t\t\t}\n\t\t} = {\n\t\t\tcomment: this.session.comment,\n\t\t\t// At the moment .list, specifically optional params, causes a problem.\n\t\t\t// conversation: this.session.conversation,\n\t\t\t// At the moment .list, specifically it not taking params, causes a problem.\n\t\t\t// inbox: this.session.inbox,\n\t\t\tmessage: this.session.message,\n\t\t\ttopic: this.session.topic,\n\t\t};\n\t\treturn sessionEndpoints[context.objectType][context.action](context.payload);\n\t}\n\n\t/**\n\t * Activate this service as a listener.\n\t */\n\tprotected startListening(): void {\n\t\t// This swallows webhook events.  When operating on an entire inbox we use its webhook rule, but a webhook\n\t\t// channel still requires somewhere to send its webhooks to.\n\t\tthis.expressApp.post('/front-dev-null', (_formData, response) => {\n\t\t\tresponse.sendStatus(200);\n\t\t});\n\t\t// Create an endpoint for this listener and enqueue events\n\t\tthis.expressApp.post(`/${FrontService._serviceName}/`, (formData, response) => {\n\t\t\tthis.queueData({\n\t\t\t\tcookedEvent: {\n\t\t\t\t\tcontext: formData.body.conversation.id,\n\t\t\t\t\tevent: formData.body.type,\n\t\t\t\t},\n\t\t\t\trawEvent: formData.body,\n\t\t\t\tsource: FrontService._serviceName,\n\t\t\t});\n\t\t\tresponse.sendStatus(200);\n\t\t});\n\t}\n\n\t/**\n\t * Verify the event before enqueueing.  For now uses the naive approach of returning true.\n\t */\n\tprotected verify(_data: FrontEvent): boolean {\n\t\t// TODO: This to be properly implemented.\n\t\treturn true;\n\t}\n\n\t/**\n\t * The name of this service, as required by the framework.\n\t * @returns  'front' string.\n\t */\n\tget serviceName(): string {\n\t\treturn FrontService._serviceName;\n\t}\n\n\t/**\n\t * Retrieve the SDK API handle for Front.\n\t * @return  The Front SDK API handle.\n\t */\n\tget apiHandle(): FrontHandle {\n\t\treturn {\n\t\t\tfront: this.session\n\t\t};\n\t}\n}\n\n/**\n * Build this class, typed and activated as a listener.\n * @returns  Service Listener object, awakened and ready to go.\n */\nexport function createServiceListener(data: FrontConnectionDetails): ServiceListener {\n\treturn new FrontService(data, true);\n}\n\n/**\n * Build this class, typed as an emitter.\n * @returns  Service Emitter object, ready for your events.\n */\nexport function createServiceEmitter(data: FrontConnectionDetails): ServiceEmitter {\n\treturn new FrontService(data, false);\n}\n"],"sourceRoot":"../../lib"}
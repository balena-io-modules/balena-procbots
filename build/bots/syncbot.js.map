{"version":3,"sources":["bots/syncbot.ts"],"names":[],"mappings":"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","file":"syncbot.js","sourcesContent":["/*\nCopyright 2016-2017 Resin.io\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as Promise from 'bluebird';\nimport { ProcBot } from '../framework/procbot';\nimport { MessengerService } from '../services/messenger';\nimport {\n\tFlowDefinition, MessageEvent, MessageListenerMethod, TransmitContext,\n} from '../services/messenger-types';\nimport { createDataHub } from '../services/messenger/datahubs/datahub';\nimport { Logger, LogLevel } from '../utils/logger';\n\nexport class SyncBot extends ProcBot {\n\tprivate static makeRouter(\n\t\tfrom: FlowDefinition, to: FlowDefinition, emitter: MessengerService, logger?: Logger\n\t): MessageListenerMethod {\n\t\treturn (_registration, event: MessageEvent) => {\n\t\t\tif (from.service === event.cookedEvent.source.service && from.flow === event.cookedEvent.source.flow) {\n\t\t\t\tconst transmitMessage: TransmitContext = {\n\t\t\t\t\tdetails: event.cookedEvent.details,\n\t\t\t\t\thubUsername: event.cookedEvent.source.username,\n\t\t\t\t\tsource: event.cookedEvent.source,\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tflow: to.flow,\n\t\t\t\t\t\tservice: to.service,\n\t\t\t\t\t\tusername: event.cookedEvent.source.username,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn emitter.sendData({\n\t\t\t\t\tcontexts: {\n\t\t\t\t\t\tmessenger: transmitMessage,\n\t\t\t\t\t},\n\t\t\t\t\tsource: 'messenger',\n\t\t\t\t}).then(() => {\n\t\t\t\t\tif(logger) {\n\t\t\t\t\t\tlogger.log(LogLevel.INFO, `---> Emitted '${event.cookedEvent.details.text}' to ${to.service}.`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// The event received doesn't match the profile being routed, so no-op is the correct action.\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\tconstructor(name = 'SyncBot') {\n\t\tsuper(name);\n\t\tconst logger = new Logger();\n\n\t\t// Build the dataHub object\n\t\tconst dataHub = createDataHub(\n\t\t\tprocess.env.SYNCBOT_DATAHUB_SERVICE,\n\t\t\tJSON.parse(process.env.SYNCBOT_DATAHUB_CONSTRUCTOR)\n\t\t);\n\t\tif (!dataHub) {\n\t\t\tthrow new Error('Could not create dataHub.');\n\t\t}\n\n\t\t// Build the messenger object, with the sub-listeners\n\t\tconst messenger = new MessengerService(\n\t\t\t{\n\t\t\t\tdataHub,\n\t\t\t\tsubServices: JSON.parse(process.env.SYNCBOT_LISTENER_CONSTRUCTORS),\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t\tif (!messenger) {\n\t\t\tthrow new Error('Could not create Messenger.');\n\t\t}\n\n\t\t// Register each edge in the mappings array bidirectionally\n\t\tconst mappings: FlowDefinition[][] = JSON.parse(process.env.SYNCBOT_MAPPINGS);\n\t\tfor(const mapping of mappings) {\n\t\t\tlet priorFlow = null;\n\t\t\tfor(const focusFlow of mapping) {\n\t\t\t\tif(priorFlow) {\n\t\t\t\t\tmessenger.registerEvent({\n\t\t\t\t\t\tevents: ['message'],\n\t\t\t\t\t\tlistenerMethod: SyncBot.makeRouter(priorFlow, focusFlow, messenger, logger),\n\t\t\t\t\t\tname: `${priorFlow.service}.${priorFlow.flow}=>${focusFlow.service}.${focusFlow.flow}`,\n\t\t\t\t\t});\n\t\t\t\t\tmessenger.registerEvent({\n\t\t\t\t\t\tevents: ['message'],\n\t\t\t\t\t\tlistenerMethod: SyncBot.makeRouter(focusFlow, priorFlow, messenger, logger),\n\t\t\t\t\t\tname: `${focusFlow.service}.${focusFlow.flow}=>${priorFlow.service}.${priorFlow.flow}`,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpriorFlow = focusFlow;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function createBot(): SyncBot {\n\treturn new SyncBot(process.env.SYNCBOT_NAME);\n}\n"],"sourceRoot":"../../lib"}